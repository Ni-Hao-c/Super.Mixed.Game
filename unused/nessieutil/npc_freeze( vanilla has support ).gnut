// make use of npc.Freeze() and npc.Unfreeze() with a safe way
global function Nessie_NPC_Freeze_Init

global function FreezeNPC
global function UnfreezeNPC
global function NPCIsFrozen

struct
{
    table<entity, bool> npcFrozenTable
} file

void function Nessie_NPC_Freeze_Init()
{

}

void function InitNPCFrozenTable( entity npc )
{
    if ( !( npc in file.npcFrozenTable ) )
        file.npcFrozenTable[npc] <- false // default value
}

void function FreezeNPC( entity npc )
{
    InitNPCFrozenTable( npc )
    if ( NPCIsFrozen( npc ) ) // anti-crash: freeze a frozen npc will crash
        return

    npc.Freeze()
    file.npcFrozenTable[npc] = true
}

void function UnfreezeNPC( entity npc )
{
    InitNPCFrozenTable( npc )
    if ( !NPCIsFrozen( npc ) ) // anti-crash: unfreeze an active npc will crash
        return

    npc.Unfreeze()
    file.npcFrozenTable[npc] = false
}

bool function NPCIsFrozen( entity npc )
{
    InitNPCFrozenTable( npc )
    return file.npcFrozenTable[npc]
}