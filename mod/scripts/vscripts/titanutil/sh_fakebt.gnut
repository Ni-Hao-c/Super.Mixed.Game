untyped
global function BTReplace_Init

#if SERVER
global function BTReplace_Enabled_Init
global function BTReplace_SetEnabled

struct
{
	bool btReplaceEnable = false

	table<entity, bool> soulIsFakeBT
	table<entity, float> btLastPrimaryAmmo
} file
#endif // SERVER

void function BTReplace_Init() 
{
	// precach
	PrecacheParticleSystem( $"P_BT_eye_SM" )
	PrecacheModel( $"models/titans/buddy/titan_buddy.mdl" )

	#if SERVER
		RegisterSignal( "PendingEjectingVoiceline" )
		AddSpawnCallback( "npc_titan", OnTitanSpawned )
		AddCallback_OnPilotBecomesTitan( OnPilotBecomesTitan )
		AddCallback_OnTitanBecomesPilot( OnTitanBecomesPilot )
	#else // CLIENT
		AddCreateCallback( "npc_titan", FakeBTClientSideSetup )
	#endif // SERVER
}

#if SERVER
// main settings
void function BTReplace_Enabled_Init()
{
	BTReplace_SetEnabled( true )
}

void function BTReplace_SetEnabled( bool enable )
{
	file.btReplaceEnable = enable
}

void function OnTitanSpawned( entity titan )
{
	// main check
	//print( "file.btReplaceEnable: " + string( file.btReplaceEnable ) )
	if ( !file.btReplaceEnable )
		return

	// needs to be a player's titan
	entity player = GetPetTitanOwner( titan )
	if ( !IsValid( player ) )
		return
	if ( !player.IsPlayer() )
		return
	//entity soul = titan.GetTitanSoul()
	
	SetBTLoadout( titan )
	//SetAutoTitanTitle( titan ) // remove auto-titan title setup for now
	thread EjectingVoiceline( titan ) // try enable voiceline every time
}

void function OnPilotBecomesTitan( entity player, entity titan )
{
	SetPlayerTitanTitle( player )
	thread UpdateBTOffhands( player )
}

void function OnTitanBecomesPilot( entity player, entity titan )
{
	//SetBTLoadout( titan )
	//SetAutoTitanTitle( titan )
}

//Apply loadout
void function SetBTLoadout( entity titan )
{
	if ( !IsValid( titan ) ) //Anti Crash
		return
	
	entity player = GetPetTitanOwner( titan )
	entity soul = titan.GetTitanSoul()
	
	if ( !IsValid( soul ) || !IsValid( player ) ) //Anti Crash 2
		return
	if ( soul in file.soulIsFakeBT ) // titan is already a BT?
		return

	// replace "frontier monarch" with fake bt
	bool btReplace = TitanShouldReplaceAsFakeBT( titan )
	//print( "btReplace: " + string( btReplace ) )
	if ( !btReplace )
		return
	
	//Monarch as Fake BT
	// notification done here!
	bool isTitanDropping = true
	if ( "spawnWithoutSoul" in titan.s )
	{
		// this is defined in CreateAutoTitanForPlayer_ForTitanBecomesPilot(), mark the titan as "disembarked" not "hotdropping"
		if ( expect bool ( titan.s.spawnWithoutSoul ) )
			isTitanDropping = false
	}

	if( isTitanDropping )
	{
		file.soulIsFakeBT[ soul ] <- true // mark as we're using fake bt
		FakeBTSettingsOverrideSetup( titan ) // setup settings override

		// Moved to titan_health.gnut, no more infinite doom
		if( !( soul in file.btLastPrimaryAmmo ) )
			file.btLastPrimaryAmmo[ soul ] <- 0.0
		file.btLastPrimaryAmmo[ soul ] = 1.0 // float, to save ammo counts
		TitanHealth_SetSoulInfiniteDoomedState( soul, false ) // bt won't have infinite doomed state
		TitanHealth_SetSoulDoomedHealthLossDamage( soul, 0.5 ) // bt take less damage from doomed health loss
		TitanPick_SoulSetEnableWeaponDrop( soul, false ) // setting titans won't drop weapon
		TitanPick_SoulSetEnableWeaponPick( soul, false ) // setting players unable to replace weapons from ground
		Rodeo_SetTitanRodeoSequenceEnabled( titan, false ) // disable rodeo sequence, still can be climbed up
		MeleeSyncedTitan_SetSoulShouldReplaceLoadoutOnExecution( soul, true ) // setting bt to follow certain callbacks that influences executions
		PlayerEarnMeter_SetSoulEarnMeterSmokeEnabled( soul, false )	// disable earnmeter smoke availability
		MeleeSyncedTitan_SetSoulCanBeExecuted( soul, false ) // cannot execute BT, they don't have enough animations
		// manually remove electric smoke from PAS_HYPER_CORE
		thread RemoveBTOffhandSmoke( titan )
		
		SendHudMessage(player, "已启用SB-7274装备，按数字键可切换装备组\n取消\"边境帝王\"战绘以使用原版帝王",  -1, 0.2, 200, 200, 225, 255, 0.15, 12, 1)
		// skin disabled
		//SendHudMessage(player, "已启用SB-7274装备\n帝王被动将修改皮肤及处决动画\n取消\"边境帝王\"战绘以使用原版帝王",  -1, 0.2, 200, 200, 225, 255, 0.15, 12, 1);
	}

	// Disable doomed in TTDM, now handled by TitanHealth_SetSoulInfiniteDoomedState()
	//if( TitanEjectIsDisabled() )
		//soul.soul.skipDoomState = true

	// Model
	// client don't have arms model
	//titan.SetAISettings( "npc_titan_buddy" )
	//player.SetPlayerSettings("titan_buddy")
	titan.SetModel($"models/titans/buddy/titan_buddy.mdl")
	StartParticleEffectOnEntity( titan, GetParticleSystemIndex( $"P_BT_eye_SM" ), FX_PATTACH_POINT_FOLLOW, titan.LookupAttachment( "EYEGLOW" ) )

	// clean up basic weapons
	foreach ( entity weapon in titan.GetMainWeapons() )
		titan.TakeWeaponNow( weapon.GetWeaponClassName() )
	foreach ( entity offhand in titan.GetOffhandWeapons() )
		titan.TakeWeaponNow( offhand.GetWeaponClassName() )

	// Weapons
	titan.GiveWeapon( "mp_titanweapon_xo16_shorty", ["fakebt_balance"] ) // ["burst", "fakebt_balance", "fakebt_balance_burst"]
	//titan.GiveWeapon( "mp_titanweapon_xo16_vanguard" )
	titan.GiveWeapon( "mp_titanweapon_triplethreat", ["fakebt_balance"] )
	//titan.GiveWeapon( "mp_titanweapon_meteor" )
	//titan.GiveWeapon( "mp_titanweapon_sticky_40mm" )
	titan.GiveWeapon( "mp_titanweapon_rocketeer_rocketstream", ["fakebt_balance"] )
	//titan.SetActiveWeaponByName( "mp_titanweapon_xo16_vanguard" )
	titan.SetActiveWeaponByName( "mp_titanweapon_xo16_shorty" )

	// Rodeo, handled by Rodeo_SetTitanRodeoSequenceEnabled()
	//DisableTitanRodeo( titan )

	// Ordnance
	//titan.GiveOffhandWeapon( "mp_titanweapon_shoulder_rockets", OFFHAND_ORDNANCE )
	titan.GiveOffhandWeapon( "mp_titanweapon_salvo_rockets", OFFHAND_ORDNANCE )

	// Defence
	titan.GiveOffhandWeapon( "mp_titanweapon_vortex_shield", OFFHAND_SPECIAL, ["slow_recovery_vortex", "sp_wider_return_spread"] )
	
	// Tactical
	titan.GiveOffhandWeapon("mp_titanability_smoke", OFFHAND_ANTIRODEO ) 
	
	// Melee
	titan.GiveOffhandWeapon( "melee_titan_punch_vanguard", OFFHAND_MELEE )
	
	// Titan Core
	titan.GiveOffhandWeapon( "mp_titancore_amp_core", OFFHAND_EQUIPMENT, ["fakebt_balance"] )

	//Executions & Skins
	soul.soul.titanLoadout.titanExecution = "execution_bt" //"execution_bt", handled in _melee_synced_titan.gnut, will perform random executions
	// defensive fix: take PAS_VANGUARD_COREMETER off bt, or execution will crash
	if ( SoulHasPassive( soul, ePassives.PAS_VANGUARD_COREMETER ) )
		TakePassive( soul, ePassives.PAS_VANGUARD_COREMETER )

	/* // now always uses "execution_bt", the random execution. skin change not enabled
	if( SoulHasPassive( soul, ePassives.PAS_VANGUARD_SHIELD ) )
	{
		soul.soul.titanLoadout.titanExecution = "execution_bt_flip"
		titan.SetSkin(1)
	}
	if( SoulHasPassive( soul, ePassives.PAS_VANGUARD_DOOM) )
	{
		soul.soul.titanLoadout.titanExecution = "execution_bt_pilotrip"
		titan.SetSkin(2)
	}
	if( SoulHasPassive( soul, ePassives.PAS_VANGUARD_REARM) )
	{
		soul.soul.titanLoadout.titanExecution = "execution_bt_kickshoot"
		titan.SetSkin(0)
	}
	if( SoulHasPassive( soul, ePassives.PAS_VANGUARD_COREMETER ) )
	{
		TakePassive( soul, ePassives.PAS_VANGUARD_COREMETER )
		soul.soul.titanLoadout.titanExecution = "execution_bt_kickshoot"
		titan.SetSkin(0)
	}
	*/

	// Passives
	//GivePassive( soul, ePassives.PAS_BUILD_UP_NUCLEAR_CORE )
	GivePassive( soul, ePassives.PAS_AUTO_EJECT )
}

void function RemoveBTOffhandSmoke( entity titan )
{
	titan.EndSignal( "OnDestroy" )

	WaitFrame()
	titan.TakeOffhandWeapon( OFFHAND_INVENTORY )
}

void function SetBTOffhands( entity player )
{
	if( !IsValid(player) )
		return

	entity soul = player.GetTitanSoul()
	if( !IsValid( soul ) )
		return
	if ( !( soul in file.soulIsFakeBT ) ) // soul is not being setup as bt
		return
		
	entity mainweapon = player.GetActiveWeapon()
	table<int,float> cooldowns = GetWeaponCooldownsForTitanLoadoutSwitch( player )

	if( IsTitanCoreFiring( player ) ) // firing core ability
		return

	// hardcoded loadouts
	if( IsValid( mainweapon ) )
	{
		//Offhands
		//if( mainweapon.GetWeaponClassName() == "mp_titanweapon_xo16_vanguard" )
		if( mainweapon.GetWeaponClassName() == "mp_titanweapon_xo16_shorty" )
		{
			if( !PlayerHasWeapon( player, "mp_titanability_smoke" ) ) // key offhand for remarking this loadout
			{
				SendHudMessage( player, "切换至远征泰坦技能组", -1, 0.3, 255, 200, 0, 0, 0.15, 6, 0.15 )
				//Ordnance
				//player.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
				//player.GiveOffhandWeapon("mp_titanweapon_shoulder_rockets", OFFHAND_ORDNANCE )
				player.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
				player.GiveOffhandWeapon("mp_titanweapon_salvo_rockets", OFFHAND_ORDNANCE )

				//Defence
				player.TakeOffhandWeapon(OFFHAND_SPECIAL)
				player.GiveOffhandWeapon("mp_titanweapon_vortex_shield", OFFHAND_SPECIAL, ["slow_recovery_vortex", "sp_wider_return_spread", "sur_level_0"] )
				
				//Tactical
				player.TakeOffhandWeapon(OFFHAND_ANTIRODEO)
				player.GiveOffhandWeapon("mp_titanability_smoke", OFFHAND_ANTIRODEO ) 
				
				//Melee
				player.TakeOffhandWeapon(OFFHAND_MELEE)
				player.GiveOffhandWeapon( "melee_titan_punch_vanguard", OFFHAND_MELEE )

				//Ammo
				ReplaceWeaponAmmo( player, soul )
				SetWeaponCooldownsForTitanLoadoutSwitch( player, cooldowns )
			}
		}
		if( mainweapon.GetWeaponClassName() == "mp_titanweapon_triplethreat" )
		{
			if( !PlayerHasWeapon( player, "mp_titanweapon_heat_shield" ) ) // key offhand for remarking this loadout
			{
				SendHudMessage( player, "切换至掷弹兵泰坦技能组", -1, 0.3, 255, 200, 0, 0, 0.15, 6, 0.15 )
				//Ordnance
				player.TakeOffhandWeapon(OFFHAND_ORDNANCE)
				player.GiveOffhandWeapon("mp_titanweapon_dumbfire_rockets", OFFHAND_ORDNANCE )

				//Defence
				player.TakeOffhandWeapon(OFFHAND_SPECIAL)
				player.GiveOffhandWeapon("mp_titanweapon_heat_shield", OFFHAND_SPECIAL, ["fakebt_balance"] )
				//player.GiveOffhandWeapon("mp_titanability_particle_wall", OFFHAND_SPECIAL, ["amped_wall"] )

				//Tactical
				player.TakeOffhandWeapon(OFFHAND_ANTIRODEO) 
				player.GiveOffhandWeapon("mp_titanability_sonar_pulse", OFFHAND_ANTIRODEO )

				//Melee
				player.TakeOffhandWeapon(OFFHAND_MELEE)
				player.GiveOffhandWeapon( "melee_titan_punch_scorch", OFFHAND_MELEE )

				//Ammo
				ReplaceWeaponAmmo( player, soul )
				SetWeaponCooldownsForTitanLoadoutSwitch( player, cooldowns )
			}
		}
		if( mainweapon.GetWeaponClassName() == "mp_titanweapon_rocketeer_rocketstream" )
		{
			if( !PlayerHasWeapon( player, "mp_titanweapon_flame_wall" ) ) // key offhand for remarking this loadout
			{
				SendHudMessage( player, "切换至野兽泰坦技能组", -1, 0.3, 255, 200, 0, 0, 0.15, 6, 0.15 )
				//Ordnance
				player.TakeOffhandWeapon(OFFHAND_ORDNANCE)	
				player.GiveOffhandWeapon("mp_titanweapon_flame_wall", OFFHAND_ORDNANCE )
				
				//Defence
				player.TakeOffhandWeapon(OFFHAND_SPECIAL)
				player.GiveOffhandWeapon("mp_titanability_particle_wall", OFFHAND_SPECIAL, ["fakebt_balance"] )
				
				//Tactical
				player.TakeOffhandWeapon(OFFHAND_ANTIRODEO)
				player.GiveOffhandWeapon("mp_titanability_laser_trip", OFFHAND_ANTIRODEO, ["pas_ion_tripwire", "fakebt_balance"] ) 
				
				//Melee
				player.TakeOffhandWeapon(OFFHAND_MELEE)
				player.GiveOffhandWeapon( "melee_titan_punch_northstar", OFFHAND_MELEE )

				//Ammo
				ReplaceWeaponAmmo( player, soul )
				SetWeaponCooldownsForTitanLoadoutSwitch( player, cooldowns )
			}
		}
		int clipAmmoLeft = mainweapon.GetWeaponPrimaryClipCount() // always calcs current clip percentage
		int maxClipAmmo = mainweapon.GetWeaponPrimaryClipCountMax()
		float clipLeft = float( clipAmmoLeft ) / float( maxClipAmmo )

		// update primary clip size
		if( !( soul in file.btLastPrimaryAmmo ) )
			file.btLastPrimaryAmmo[ soul ] <- 0.0
		file.btLastPrimaryAmmo[ soul ] = clipLeft
	}
}

void function UpdateBTOffhands( entity player )
{
	if( !IsValid(player) )
		return
		
	entity soul = player.GetTitanSoul()
	if( !IsValid( soul ) )
		return
	if ( !( soul in file.soulIsFakeBT ) ) // soul is not being setup as bt
		return

	player.EndSignal( "DisembarkingTitan" )
	player.EndSignal( "TitanEjectionStarted" )
	player.EndSignal( "OnDeath" )
	player.EndSignal( "OnDestroy" )
	while( true )
	{
		SetBTOffhands( player )
		WaitFrame()
	}
}

void function ReplaceWeaponAmmo( entity player, entity soul )
{
	entity mainweapon = player.GetActiveWeapon()
	if( IsValid(mainweapon) )
	{
		float clipLeftPercentage = file.btLastPrimaryAmmo[ soul ]
		// defensive fix...
		if( clipLeftPercentage > 1 )
			clipLeftPercentage = 1
		if( clipLeftPercentage < 0 )
			clipLeftPercentage = 0
		// Ammo
		mainweapon.SetWeaponPrimaryClipCount( int( mainweapon.GetWeaponPrimaryClipCountMax() * clipLeftPercentage ) )
	}
}

void function EjectingVoiceline( entity titan )
{
	if( !IsValid(titan) )
		return
	entity player = GetPetTitanOwner(titan)
	// Voicelines
	entity soul = player.GetTitanSoul()
	if( !IsValid( soul ) )
		return
	if ( !( soul in file.soulIsFakeBT ) ) // soul is not being setup as bt
		return

	soul.Signal( "PendingEjectingVoiceline" ) // end last thread
	soul.EndSignal( "PendingEjectingVoiceline" )
	soul.EndSignal( "OnDestroy" )
	player.WaitSignal( "TitanEjectionStarted" )
	if( IsValid(player) )
	{
		vector origin = player.GetOrigin()
		EmitSoundAtPosition( TEAM_UNASSIGNED, origin, "diag_sp_extra_GB101_99_01_mcor_bt" )
	}
}

/* // remove auto-titan title setup for now
void function SetAutoTitanTitle( entity titan )
{
	if( IsValid(titan) && titan.GetModelName() == $"models/titans/buddy/titan_buddy.mdl" )
		titan.SetTitle( "SB-7274" )
}
*/

void function SetPlayerTitanTitle( entity player )
{
	entity soul = player.GetTitanSoul()
	if( !IsValid( soul ) )
		return
	if ( !( soul in file.soulIsFakeBT ) ) // soul is not being setup as bt
		return

	player.SetTitle( "SB-7274" )
}
#endif // SERVER

#if CLIENT
void function FakeBTClientSideSetup( entity titan )
{
	thread FakeBTClientSideSetup_Threaded( titan )
}

void function FakeBTClientSideSetup_Threaded( entity titan )
{
	wait 1.0 // wait for server DispatchSpawn()

	if ( TitanShouldReplaceAsFakeBT( titan ) )
		FakeBTSettingsOverrideSetup( titan )
}
#endif

// shared functions
bool function TitanShouldReplaceAsFakeBT( entity titan )
{
	return titan.GetModelName() == $"models/titans/medium/titan_medium_vanguard.mdl" && titan.GetCamo() == -1 && titan.GetSkin() == 3
}

void function FakeBTSettingsOverrideSetup( entity titan )
{
	SetTitanSoulCharacterNameOverride( titan.GetTitanSoul(), "bt" )
	TitanSoul_SetSoulPlayerSettingsOverride( titan.GetTitanSoul(), "titan_buddy" )
}